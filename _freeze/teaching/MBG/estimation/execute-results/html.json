{
  "hash": "2a6bcf51ff0c70bb3daaf07d63fc40d5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Model formulation and parameter estimation\"\nsubtitle: \"Model-based Geostatistics for Global Public Health\"  \nauthor: \"Emanuele Giorgi\"  \ninstitute: \"Lancaster University\" \nexecute:\n  freeze: true\ndate: \"\"  \nformat:\n  revealjs:\n    theme: solarized\n    transition: fade\n    slide-number: true\n    chalkboard: true\n    logo: \"Images/clogo.png\"\n    footer: \"[Click here to go back to the course page](../mbg.qmd)\"\n---\n\n\n\n## Overview of topics\n\n-   How to assess residual spatial correlation\n-   How to formulate and fit a geostatistical model\n-   How to interpret the results from a model fit\n\n------------------------------------------------------------------------\n\n## Which residuals should we use to assess spatial correlation? {.smaller .scrollable}\n\n-   **Pearson Residuals**: $$\\frac{y_i - \\hat{y}_i}{\\sqrt{\\text{Var}(\\hat{y}_i)}}$$\n\n-   **Deviance Residuals**: $$\\text{sign}(y_i - \\hat{y}_i) \\times \\sqrt{d_i}$$ where $d_i$ is the deviance contribution of observation $i$.\n\n-   **Random Effects Residuals**: $\\hat{Z}_i$, i.e. the estimated random effect for each location/household/cluster/village.\n\n------------------------------------------------------------------------\n\n## The Empirical Variogram using Random Effects Residuals {.smaller .scrollable}\n\n-   The empirical variogram is defined as: $$\n    \\gamma(D_{[a,b]}) = \\frac{1}{2|D_{[a,b]}|} \\sum_{(i,j) \\in D_{[a,b]}} (\\hat{Z}_i - \\hat{Z}_j)^2\n    $$ where:\n    -   $D_{[a,b]}$ is a class of distance with lower limit $a$ and upper limit $b$;\n    -   $|D_{[a,b]}|$ is the number of pairs of observations whose locations ar at a distance between $a$ and $b$.\n\n. . .\n\n![](Images/variogram.png)\n\n. . .\n\n![](Images/rlogo.png){width=\"10%\"} [liberia_variog.R](R%20scripts/liberia_variog.R)\n\n. . .\n \n## Stationary and Isotropic Gaussian Processes \n\n- A **Gaussian Process (GP)** is a collection of random variables, any finite subset of which follows a multivariate normal distribution.\n- A GP is **stationary** if its statistical properties do not change with location shifts.\n- It is **isotropic** if its properties do not change with locations rotations. \n- We denote a GP as $S(x)$, where $x$ represents location.\n\n## The Matérn Process {.smaller}\n\n- The **Matérn covariance function** is widely used in spatial statistics and geostatistics.\n- It is controlled by three parameters:\n  - **Variance** ($\\sigma^2$) – controls process magnitude\n  - **Smoothness** ($\\kappa$) – determines differentiability\n  - **Scale parameter** ($\\phi$) – governs spatial correlation decay\n- The covariance function is given by:\n$$\n  C(h) = \\sigma^2 \\frac{2^{1-\\kappa}}{\\Gamma(\\kappa)} \\left( \\frac{h}{\\phi} \\right)^\\kappa K_\\kappa \\left( \\frac{h}{\\phi} \\right)\n$$\n  where $K_\\kappa$ is the modified Bessel function of the second kind.\n\n## Interactive R Code for Matérn Process\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## Simulating a Matern Process {.smaller .scrollable}\n\n```r\nlibrary(ggplot2)\nlibrary(fields)\n\n# Function to generate Matérn correlation\nmatern_corr <- function(h, nu, rho) {\n  if (h == 0) return(1)\n  factor <- (2^(1 - nu)) / gamma(nu)\n  scaled_h <- h / rho\n  factor * (scaled_h^nu) * besselK(scaled_h, nu)\n}\n\n# User-defined parameters\nsigma2 <- 1  # Variance\nnu <- 1.5  # Smoothness\nrho <- 0.5  # Scale parameter\n\n# Distance grid\nh_vals <- seq(0, 3, length.out = 100)\ncorr_vals <- sapply(h_vals, matern_corr, nu = nu, rho = rho)\n\n# Plot correlation function\nggplot(data.frame(h = h_vals, corr = corr_vals), aes(x = h, y = corr)) +\n  geom_line() +\n  labs(title = \"Matérn Correlation Function\", x = \"Distance h\", y = \"Correlation\")\n\n# Simulating a Spatial Field\nset.seed(42)\ngrid_size <- 30\nx <- seq(0, 1, length.out = grid_size)\ny <- seq(0, 1, length.out = grid_size)\ngrid <- expand.grid(x = x, y = y)\n\n# Generate a Matérn GP field using fields package\nsim_field <- spatialProcess(grid, rnorm(nrow(grid), mean = 0, sd = sqrt(sigma2)))\n\nggplot(grid, aes(x = x, y = y, fill = sim_field$fitted.values)) +\n  geom_tile() +\n  scale_fill_viridis_c() +\n  theme_minimal() +\n  labs(title = \"Simulated Matérn GP Surface\", fill = \"Value\")\n```\n\n## Theoretical Variogram\n\n- The variogram measures spatial dependence:\n$$\n  \\gamma(h) = \\frac{1}{2} \\mathbb{E} \\left[\\left\\{S(x) - S(x+h)\\right\\}^2\\right]\n$$\n- For the Matérn process, it is derived from its covariance functio\n$$\n  \\gamma(h) = \\sigma^2 \\left( 1 - C(h) \\right)\n$$\n- This provides a measure of dissimilarity over distance.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}