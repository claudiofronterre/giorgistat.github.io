plot(tza_pop)
# EVI for Tanzania
tza_evi <- rast("teaching/MBG/Data/Tanzania_Annual_EVI_2015.tif")
tza_evi <- project(tza_evi, "EPSG:32736")
# Temperature for Tanzania
tza_evi <- rast("teaching/MBG/Data/Tanzania_Annual_LST_2015.tif")
tza_evi <- project(tza_evi, "EPSG:32736")
# Population density for Tanzania
library(terra)
tza_pop <- rast("teaching/MBG/Data/Population_2015.tif")
# Temperature for Tanzania
tza_temp <- rast("teaching/MBG/Data/Tanzania_Annual_LST_2015.tif")
tza_temp <- project(tza_temp, "EPSG:32736")
# Create the grid
grid_tz <- create_grid(shp_tz_0, spat_res = 20)
# EVI for Tanzania
tza_evi <- rast("teaching/MBG/Data/Tanzania_Annual_EVI_2015.tif")
tza_evi <- project(tza_evi, "EPSG:32736")
# Temperature for Tanzania
tza_temp <- rast("teaching/MBG/Data/Tanzania_Annual_LST_2015.tif")
tza_temp <- project(tza_temp, "EPSG:32736")
# Population density for Tanzania
library(terra)
tza_pop <- rast("teaching/MBG/Data/Population_2015.tif")
tza_pop <- project(tza_pop, "EPSG:32736")
pred_tza <- data.frame(EVI = extract(tza_evi, as_as_sf(grid_tz)),
Temperature = extract(tza_temp, as_as_sf(grid_tz)))
pred_tza <- data.frame(EVI = extract(tza_evi, st_as_sf(grid_tz)),
Temperature = extract(tza_temp, st_as_sf(grid_tz)))
# Create the grid
grid_tza <- create_grid(shp_tz_0, spat_res = 20)
pred_tza <- data.frame(EVI = extract(tza_evi, st_as_sf(grid_tza)),
Temperature = extract(tza_temp, st_as_sf(grid_tza)))
pred_S_lb <-
pred_over_grid(lb_fit, grid_pred = grid_tz,
predictors = pred_tza, type="joint")
pred_S_tza_null <-
pred_over_grid(glgm_fit_null, grid_pred = grid_tz,
predictors = pred_tza, type="joint")
pred_S_tza_null <-
pred_over_grid(glgm_fit_null, grid_pred = grid_tz, type="joint")
pred_S_tza_cov <-
pred_over_grid(glgm_fit, predictors = pred_tza,
grid_pred = grid_tz, type="joint")
extract(tza_temp, st_as_sf(grid_tza))
pred_tza <- data.frame(EVI = extract(tza_evi, st_as_sf(grid_tza))[,2],
Temperature = extract(tza_temp, st_as_sf(grid_tza))[,2])
pred_tza
pred_S_tza_cov <-
pred_over_grid(glgm_fit, predictors = pred_tza,
grid_pred = grid_tz, type="joint")
args(pred_target_grid)
pred_T_grid <-
pred_target_grid(pred_S_tza_cov,
f_target = list(prev = function(x) exp(x)/(1+exp(x))),
pd_summary = list(mean = mean,
btw10_30 = function(x) mean(x > 0.1 &
x < 0.3)))
plot(pred_T_grid, which_target = "prev", which_summary = "mean",
main = "Predictive mean")
# Create the grid
grid_tza <- create_grid(shp_tz_0, spat_res = 10)
# EVI for Tanzania
tza_evi <- rast("teaching/MBG/Data/Tanzania_Annual_EVI_2015.tif")
tza_evi <- project(tza_evi, "EPSG:32736")
# Temperature for Tanzania
tza_temp <- rast("teaching/MBG/Data/Tanzania_Annual_LST_2015.tif")
tza_temp <- project(tza_temp, "EPSG:32736")
# Population density for Tanzania
library(terra)
tza_pop <- rast("teaching/MBG/Data/Population_2015.tif")
tza_pop <- project(tza_pop, "EPSG:32736")
# Extract covariates over the grid
pred_tza <- data.frame(EVI = extract(tza_evi, st_as_sf(grid_tza))[,2],
Temperature = extract(tza_temp, st_as_sf(grid_tza))[,2])
pred_S_tza_cov <-
pred_over_grid(glgm_fit, predictors = pred_tza,
grid_pred = grid_tz, type="joint")
pred_S_tza_cov <-
pred_over_grid(glgm_fit, predictors = pred_tza,
grid_pred = grid_tza, type="joint")
plot(pred_T_grid, which_target = "prev", which_summary = "mean",
main = "Predictive mean")
plot(pred_T_grid, which_target = "prev", which_summary = "mean")
plot(pred_T_grid, which_target = "prev", which_summary = "mean",
main = "Predictive mean")
plot(pred_T_grid, which_target = "prev", which_summary = "mean")
pred_T_grid <-
pred_target_grid(pred_S_tza_cov,
f_target = list(prev = function(x) exp(x)/(1+exp(x))),
pd_summary = list(mean = mean,
btw10_30 = function(x) mean(x > 0.1 &
x < 0.3)))
plot(pred_T_grid, which_target = "prev", which_summary = "mean",
main = "Predictive mean")
plot(pred_T_grid, which_target = "prev", which_summary = "btw10_30")
pred_T_grid <-
pred_target_grid(pred_S_tza_cov,
f_target = list(prev = function(x) exp(x)/(1+exp(x))),
pd_summary = list(mean = mean,
below10 = function(x) mean(x < 0.1),
btw10_30 = function(x) mean(x > 0.1 &
x < 0.3),
above30 = function(x) {
v1 <- mean(x < 0.1)
v2 <- mean(x > 0.1 &
x < 0.3)
v3 <- mean(x > 0.3)
(1:3)[which.max(c(v1,v2,v3))]
}))
pred_T_grid <-
pred_target_grid(pred_S_tza_cov,
f_target = list(prev = function(x) exp(x)/(1+exp(x))),
pd_summary = list(mean = mean,
below10 = function(x) mean(x < 0.1),
btw10_30 = function(x) mean(x > 0.1 &
x < 0.3),
class = function(x) {
v1 <- mean(x < 0.1)
v2 <- mean(x > 0.1 &
x < 0.3)
v3 <- mean(x > 0.3)
(1:3)[which.max(c(v1,v2,v3))]
}))
plot(pred_T_grid, which_target = "prev", which_summary = "class")
plot(pred_T_grid, which_target = "prev", which_summary = "below10")
plot(pred_T_grid, which_target = "prev", which_summary = "btw10_30")
plot(pred_T_grid, which_target = "prev", which_summary = "class")
pred_T_adm1 <-
pred_target_shp(pred_S_tza_cov,
f_target = list(prev = function(x) exp(x)/(1+exp(x))),
shp = shp_tz_0,
shp_target = mean,
pd_summary = list(mean = mean,
below10 = function(x) mean(x < 0.1),
btw10_30 = function(x) mean(x > 0.1 &
x < 0.3),
class = function(x) {
v1 <- mean(x < 0.1)
v2 <- mean(x > 0.1 &
x < 0.3)
v3 <- mean(x > 0.3)
(1:3)[which.max(c(v1,v2,v3))]
}))
args(pred_target_shp)
pred_T_adm1 <-
pred_target_shp(pred_S_tza_cov,
f_target = list(prev = function(x) exp(x)/(1+exp(x))),
shp = shp_tz_1,
shp_target = mean,
pd_summary = list(mean = mean,
below10 = function(x) mean(x < 0.1),
btw10_30 = function(x) mean(x > 0.1 &
x < 0.3),
class = function(x) {
v1 <- mean(x < 0.1)
v2 <- mean(x > 0.1 &
x < 0.3)
v3 <- mean(x > 0.3)
(1:3)[which.max(c(v1,v2,v3))]
})
col_names = "shapeName")
pred_T_adm1 <-
pred_target_shp(pred_S_tza_cov,
f_target = list(prev = function(x) exp(x)/(1+exp(x))),
shp = shp_tz_1,
shp_target = mean,
pd_summary = list(mean = mean,
below10 = function(x) mean(x < 0.1),
btw10_30 = function(x) mean(x > 0.1 &
x < 0.3),
class = function(x) {
v1 <- mean(x < 0.1)
v2 <- mean(x > 0.1 &
x < 0.3)
v3 <- mean(x > 0.3)
(1:3)[which.max(c(v1,v2,v3))]
}),
col_names = "shapeName")
plot(pred_T_adm1, which_target = "prev", which_summary = "mean",
palette = "RdYlGn",
limits = c(0.1, 0.30),
breaks =  seq(0.1, 0.30, by = 0.05)) +
guides(fill=guide_legend(title="Prevalence")) +
ggtitle("Average prevalence \n (no weights)") +
theme(plot.title = element_text(size = 15))
plot(pred_T_grid, which_target = "prev", which_summary = "mean",
main = "Predictive mean")
plot(pred_T_adm1, which_target = "prev", which_summary = "mean",
palette = "RdYlGn",
limits = c(0.1, 0.50),
breaks =  seq(0.1, 0.50, by = 0.05)) +
guides(fill=guide_legend(title="Prevalence")) +
ggtitle("Average prevalence \n (no weights)") +
theme(plot.title = element_text(size = 15))
plot(pred_T_adm1, which_target = "prev", which_summary = "mean",
palette = "RdYlGn",
limits = c(0, 0.50),
breaks =  seq(0, 0.50, by = 0.05)) +
guides(fill=guide_legend(title="Prevalence")) +
ggtitle("Average prevalence \n (no weights)") +
theme(plot.title = element_text(size = 15))
plot(pred_T_adm1, which_target = "prev", which_summary = "mean",
palette = "RdYlGn",
limits = c(0, 0.30),
breaks =  seq(0, 0.30, by = 0.05)) +
guides(fill=guide_legend(title="Prevalence")) +
ggtitle("Average prevalence \n (no weights)") +
theme(plot.title = element_text(size = 15))
plot(pred_T_adm1, which_target = "prev", which_summary = "mean",
palette = "RdYlGn",
limits = c(0, 0.25),
breaks =  seq(0, 0.25, by = 0.05)) +
guides(fill=guide_legend(title="Prevalence")) +
ggtitle("Average prevalence \n (no weights)") +
theme(plot.title = element_text(size = 15))
3
plot(pred_T_adm1, which_target = "prev", which_summary = "mean",
palette = "RdYlGn",
limits = c(0, 0.30),
breaks =  seq(0, 0.30, by = 0.05)) +
guides(fill=guide_legend(title="Prevalence")) +
ggtitle("Average prevalence \n (no weights)") +
theme(plot.title = element_text(size = 15))
plot(pred_T_adm1, which_target = "prev", which_summary = "class",
palette = "RdYlGn",
limits = 1:3) +
guides(fill=guide_legend(title="Class")) +
ggtitle("District class") +
theme(plot.title = element_text(size = 15))
pred_T_adm1 <-
pred_target_shp(pred_S_tza_cov,
f_target = list(prev = function(x) exp(x)/(1+exp(x))),
shp = shp_tz_1,
shp_target = mean,
pd_summary = list(mean = mean,
below10 = function(x) mean(x < 0.05),
btw10_30 = function(x) mean(x > 0.1 &
x < 0.2),
class = function(x) {
v1 <- mean(x < 0.05)
v2 <- mean(x > 0.1 &
x < 0.2)
v3 <- mean(x > 0.2)
(1:3)[which.max(c(v1,v2,v3))]
}),
col_names = "shapeName")
plot(pred_T_adm1, which_target = "prev", which_summary = "mean",
palette = "RdYlGn",
limits = c(0, 0.30),
breaks =  seq(0, 0.30, by = 0.05)) +
guides(fill=guide_legend(title="Prevalence")) +
ggtitle("Average prevalence") +
theme(plot.title = element_text(size = 15))
plot(pred_T_adm1, which_target = "prev", which_summary = "class",
palette = "RdYlGn",
limits = 1:3) +
guides(fill=guide_legend(title="Class")) +
ggtitle("District class") +
theme(plot.title = element_text(size = 15))
plot(pred_T_adm1, which_target = "prev", which_summary = "class",
palette = "RdYlGn") +
guides(fill=guide_legend(title="Class")) +
ggtitle("District class") +
theme(plot.title = element_text(size = 15))
plot(pred_T_adm1, which_target = "prev", which_summary = "class",
palette = "RdYlGn",
breaks = 1:3) +
guides(fill=guide_legend(title="Class")) +
ggtitle("District class") +
theme(plot.title = element_text(size = 15))
plot(pred_T_adm1, which_target = "prev", which_summary = "class",
palette = "RdYlGn",
breaks = 1:3) +
guides(fill=guide_legend(title="Class")) +
ggtitle("Predicted district class") +
theme(plot.title = element_text(size = 15))
plot(pred_T_adm1, which_target = "prev", which_summary = "mean",
palette = "RdYlGn",
limits = c(0, 0.30),
breaks =  seq(0, 0.30, by = 0.05)) +
guides(fill=guide_legend(title="Prevalence")) +
ggtitle("Average prevalence") +
theme(plot.title = element_text(size = 15))
plot(pred_T_adm1, which_target = "prev", which_summary = "class",
palette = "RdYlGn",
breaks = 1:3) +
guides(fill=guide_legend(title="Class")) +
ggtitle("Predicted district class") +
theme(plot.title = element_text(size = 15))
pred_T_adm1 <-
pred_target_shp(pred_S_tza_cov,
f_target = list(prev = function(x) exp(x)/(1+exp(x))),
shp = shp_tz_0,
weights = tza_pop,
standardize_weights = FALSE,
shp_target = sum,
pd_summary = list(mean = mean,
lower = function(x) quantile(x, 0.025),
upper = funciton(x) quantile(x, 0.975)),
pred_T_adm1 <-
pred_target_shp(pred_S_tza_cov,
f_target = list(prev = function(x) exp(x)/(1+exp(x))),
shp = shp_tz_0,
weights = tza_pop,
standardize_weights = FALSE,
shp_target = sum,
pd_summary = list(mean = mean,
lower = function(x) quantile(x, 0.025),
upper = function(x) quantile(x, 0.975)),
col_names = "shapeName")
tza_weights <- extract(tza_pop, st_as_sf(grid_tza))
pred_T_adm1 <-
pred_target_shp(pred_S_tza_cov,
f_target = list(prev = function(x) exp(x)/(1+exp(x))),
shp = shp_tz_0,
weights = tza_weights,
standardize_weights = FALSE,
shp_target = sum,
pd_summary = list(mean = mean,
lower = function(x) quantile(x, 0.025),
upper = function(x) quantile(x, 0.975)),
col_names = "shapeName")
tza_weights
tza_weights <- extract(tza_pop, st_as_sf(grid_tza))[,2]
pred_T_adm1 <-
pred_target_shp(pred_S_tza_cov,
f_target = list(prev = function(x) exp(x)/(1+exp(x))),
shp = shp_tz_0,
weights = tza_weights,
standardize_weights = FALSE,
shp_target = sum,
pd_summary = list(mean = mean,
lower = function(x) quantile(x, 0.025),
upper = function(x) quantile(x, 0.975)),
col_names = "shapeName")
tza_weights
tza_weights <- extract(tza_pop, pred_S_tza_cov$grid_pred)[,2]
tza_weights
tza_weights <- extract(tza_pop, pred_S_tza_cov$grid_pred)[,2]
pred_T_adm1 <-
pred_target_shp(pred_S_tza_cov,
f_target = list(prev = function(x) exp(x)/(1+exp(x))),
shp = shp_tz_0,
weights = tza_weights,
standardize_weights = FALSE,
shp_target = sum,
pd_summary = list(mean = mean,
lower = function(x) quantile(x, 0.025),
upper = function(x) quantile(x, 0.975)),
col_names = "shapeName")
pred_T_adm1
pred_T_adm1$target$Tanzania$prev
tza_pop <- rast("teaching/MBG/Data/Tanzania_population_counts_2015.tif.tif")
tza_pop <- project(tza_pop, "EPSG:32736")
st_coordinates(grid_tza)
grid_tza
distgrid_tza
dist_summaries(grid_tza)
dist_summaries(st_as_sf(grid_tza))
tza_weights <- 10*extract(tza_pop, pred_S_tza_cov$grid_pred)[,2]
tza_weights
pred_T_adm1 <-
pred_target_shp(pred_S_tza_cov,
f_target = list(prev = function(x) exp(x)/(1+exp(x))),
shp = shp_tz_0,
weights = tza_weights,
standardize_weights = FALSE,
shp_target = sum,
pd_summary = list(mean = mean,
lower = function(x) quantile(x, 0.025),
upper = function(x) quantile(x, 0.975)),
col_names = "shapeName")
pred_T_adm1$target$Tanzania$prev
tza_pop <- rast("teaching/MBG/Data/Tanzania_population_counts_2015.tif.tif")
tza_pop <- rast("teaching/MBG/Data/Tanzania_population_counts_2015.tif")
tza_pop <- rast("teaching/MBG/Data/Tanzania_population_counts_2015.tif")
tza_pop <- project(tza_pop, "EPSG:32736")
tza_weights <- 10*extract(tza_pop, pred_S_tza_cov$grid_pred)[,2]
tza_pop <- rast("teaching/MBG/Data/Tanzania_population_counts_2015.tif")
tza_pop <- rast("teaching/MBG/Data/Tanzania_population_counts_2015.tif")
tza_pop <- project(tza_pop, "EPSG:32736")
tza_weights <- 10*extract(tza_pop, pred_S_tza_cov$grid_pred)[,2]
tza_weights
pred_T_adm1 <-
pred_target_shp(pred_S_tza_cov,
f_target = list(prev = function(x) exp(x)/(1+exp(x))),
shp = shp_tz_0,
weights = tza_weights,
standardize_weights = FALSE,
shp_target = sum,
pd_summary = list(mean = mean,
lower = function(x) quantile(x, 0.025),
upper = function(x) quantile(x, 0.975)),
col_names = "shapeName")
pred_T_adm1$target$Tanzania$prev
tza_weights <- extract(tza_pop, pred_S_tza_cov$grid_pred)[,2]
pred_T_adm1 <-
pred_target_shp(pred_S_tza_cov,
f_target = list(prev = function(x) exp(x)/(1+exp(x))),
shp = shp_tz_0,
weights = tza_weights,
standardize_weights = FALSE,
shp_target = sum,
pd_summary = list(mean = mean,
lower = function(x) quantile(x, 0.025),
upper = function(x) quantile(x, 0.975)),
col_names = "shapeName")
pred_T_adm1$target$Tanzania$prev
tza_pop <- rast("teaching/MBG/Data/Tanzania_population_density_2015.tif")
tza_pop <- project(tza_pop, "EPSG:32736")
# Extract covariates over the grid
pred_tza <- data.frame(EVI = extract(tza_evi, st_as_sf(grid_tza))[,2],
Temperature = extract(tza_temp, st_as_sf(grid_tza))[,2])
pred_S_tza_cov <-
pred_over_grid(glgm_fit, predictors = pred_tza,
grid_pred = grid_tza, type="joint")
tza_weights <- 10*extract(tza_pop, pred_S_tza_cov$grid_pred)[,2]
pred_T_adm1 <-
pred_target_shp(pred_S_tza_cov,
f_target = list(prev = function(x) exp(x)/(1+exp(x))),
shp = shp_tz_0,
weights = tza_weights,
standardize_weights = FALSE,
shp_target = sum,
pd_summary = list(mean = mean,
lower = function(x) quantile(x, 0.025),
upper = function(x) quantile(x, 0.975)),
col_names = "shapeName")
pred_T_adm1$target$Tanzania$prev
################
################
data("anopheles")
an_fit <- glgpm(An.gambiae ~ elevation + gp(),
family = "poisson",
data = anopheles_sf)
anopheles_sf <- st_as_sf(anopheles, coords = c("web_x", "web_y"), crs = 3857)
an_fit <- glgpm(An.gambiae ~ elevation + gp(),
family = "poisson",
data = anopheles_sf)
# Create grid from convex hull
shp_ch <- convex_hull_sf(an_fit$data_sf)
an_grid <- create_grid(shp_ch, spat_res = 2)
an_elev <- get_elev_raster(locations = shp_ch,
z = 9, clip = "locations")
an_elev <- get_elev_point(st_as_sf(an_grid), prj = 3857, src = "aws")$elevation
predictors <- data.frame(elevation= terra::extract(an_elev,
st_coordinates(an_grid)))
predictors <- data.frame(elevation= terra::extract(an_elev,
st_as_sf(an_grid)))
an_elev
predictors <- data.frame(elevation= an_elev)
pred_an_S <- pred_over_grid(an_fit, grid = an_grid,
predictors = predictors,
type = "joint")
pred_n_mosq_grid <-
pred_target_grid(pred_an_S,
f_target = list(n_mosq = function(lp) exp(lp)),
pd_summary = list(mean = function(Tx) mean(Tx)))
an_weights <- 1*(predictors$elevation > 400 & predictors$elevation < 830)
pred_n_mosq_shp <-
pred_target_shp(pred_an_S, shp = shp_ch,
weights = an_weights,
shp_target = sum,
f_target = list(n_mosq = function(lp) exp(lp)),
pd_summary = list(mean = function(Tx) mean(Tx),
q025 = function(Tx) quantile(Tx, 0.025),
q075 = function(Tx) quantile(Tx, 0.975)))
pred_n_mosq_shp$target$reg1$n_mosq
?anopheles
anopheles_sf <- st_as_sf(anopheles, coords = c("web_x", "web_y"), crs = 3857)
shp_ch <- convex_hull_sf(anopheles_sf)
shp_ch
library(terra)
r <- rast(file.choose())
plot(r)
plot(log(r))
data <- read.csv("teaching/MBG/Assessment/Remo_CAMEROUN.csv")
plot(data[,("long","Lat")])
plot(data[,("long","lat")])
str(data)
plot(data[,("long","lat")])
plot(data[,c("long","lat")])
dir()
dir("teaching/MBG/Assessment/")
# Define the folder path
folder_path <- "teaching/MBG/Assessment/"
# List all CSV files in the folder
csv_files <- list.files(folder_path, pattern = "*.csv", full.names = TRUE)
# Loop through each file
for (file in csv_files) {
# Read the CSV file
data <- read.csv(file)
# Check if "lat" and "long" columns exist
if (all(c("lat", "long") %in% names(data))) {
# Swap values
temp <- data$lat
data$lat <- data$long
data$long <- temp
# Save the modified file
write.csv(data, file, row.names = FALSE)
cat("Processed:", file, "\n")
} else {
cat("Skipping (missing columns):", file, "\n")
}
}
data <- read.csv("teaching/MBG/Assessment/Remo_CAMEROUN.csv")
plot(data[,c("long","lat")])
data <- read.csv("teaching/MBG/Assessment/Remo_MALAWI.csv")
plot(data[,c("long","lat")])
data <- read.csv("teaching/MBG/Assessment/Remo_MOZAMBIQUE.csv")
plot(data[,c("long","lat")])
